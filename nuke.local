#!/bin/sh
##############################################################################
. ${HOME}/.config/SmokeScreen/smokescreen.conf

# If script is already running; abort.
if pidof -o %PPID -x "$(basename "$0")"; then
    echo "$(date "+%d.%m.%Y %T") INFO: $(basename "$0") already in progress. Aborting."
    exit 3
fi

# Generate file list and iterate through it...
find "${localdir}" -type f |
    while read -r n; do

        # Find the pathname relative to the root of your remote and store filename
        filename="$(echo "$n" | sed -e s@"${localdir}"@@)"

        # Skip hidden or partial files.
        case "$n" in
            (*.partial~) continue ;;
            (*_HIDDEN~) continue ;;
            (*.QTFS) continue ;;
            (*.fuse*) continue ;;
        esac

        # Get the MD5SUM of our local copy
        local_checksum=$(md5sum "$n" | awk '{print $1}')

        # If file is opened by another process, wait until it isn't.
        while [ "$(lsof "${n}" >/dev/null 2>&1)" ]; do
            echo "$(date "+%d.%m.%Y %T") INFO: File -> ${n} in use. Retrying in 10 seconds."
            sleep 10
        done

        # Check remote MD5SUMs
        primary_checksum=$($rclonebin md5sum "${primaryremote}:${cloudsubdir}${filename}" 2>&1 | awk '{print $1}' | head --lines=1)

        # Check that all MD5SUMs match, and if so, delete local copies.
	if [ "$primary_checksum" = "$local_checksum" ]; then
		echo "$(date "+%d.%m.%Y %T") INFO: Removing -> ${n}"
		rm -f "$n"
	else
		echo "$(date "+%d.%m.%Y %T") INFO: File -> ${n} not synced."
	fi

    done

# Nuke empty folders in local media folder
echo "$(date "+%d.%m.%Y %T") INFO: Nuking Empty Folders..."
find ${localdir} -mindepth 2 -type d -empty -delete 2>&1

# success!
exit 0
